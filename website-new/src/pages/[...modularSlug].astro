---
import Layout from '../layouts/Layout.astro'

import {getSanityData} from '../lib/sanity';
import {modularPages} from '../lib/queries'
import Section from '../components/Section.astro';
import VideoHero from '../components/VideoHero.astro';
import RichText from '../components/RichText.astro';

export async function getStaticPaths() {
  const allModularPages = await getSanityData({query: modularPages});

  return allModularPages.map(page => {
    let { slug: { current: slug } } = page.meta;
    slug = slug === "/" ? undefined : slug.replace(/(^\/+)|(\/+$)/g, "");
    return {
      params: {
        modularSlug: slug,
      },
      props: {page}
    }  
    });
};

const {page} = Astro.props;
---
<Layout title={page.meta.title}>
  <>
    {page.blocks.map(block => {
      let type = block._type;

      if (type === 'videoHero') {
        let {backgroundImage, backgroundVideo, cta, description, title, video, renderTitle} = block;
        return <VideoHero
          {block}
          {backgroundImage}
          {backgroundVideo}
          {cta}
          {description}
          {title}
          {video}
          {renderTitle}
          >
        </VideoHero>;
      };

      if (type === 'section') {
        let {title, description, blocks, cta, layout, renderTitle} = block;
        return <Section
          {title}
          {description}
          {blocks}
          {cta}
          {layout}
          {renderTitle}>
        </Section>;
      };

      if (type === 'richtext') {
        let {content} = block;
        return <RichText {content} />
      };
      return `No component specified for \`${type}\``;
    })};

    <details>
      <summary>data</summary>
      <pre>{JSON.stringify(page, null, 2)}</pre>
    </details>
    </>
</Layout>
