---
import '../css/main.scss'

import { getSanityData } from '../lib/sanity';
import { globalSettings } from '../lib/queries';

import BackLink from '../components/webcomponents/BackLink.astro';
import Navigation from '../components/Navigation.astro';

const {
	class: className,
	lang,
	nonav,
	title,
} = Astro.props;

const home = lang === 'de' ? '/' : '/en/';

const globalData = await getSanityData({query: globalSettings, params: { $lang: lang }});
const { nav } = globalData;
---

<!DOCTYPE html>
<html {lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		{
			!nonav &&
			<Navigation navItems={nav} home={home}></Navigation>
		}
		<main class={className}>
			<slot />
			<BackLink lang={lang} />
		</main>
	</body>
</html>

<script>
	let currentUrl = window.location.pathname
		.replace(window.location.hash, '');

	const params = new URLSearchParams(window.location.search);
	const showBacklink = params.get('showBacklink') === '';

	const dataNode = document.querySelector('[data-gallery-id]');
	const hash = dataNode ? dataNode.dataset.galleryId : null;

	const backlinkComponent = document.querySelector('back-link');

	const body = document.querySelector('body');

	let {
		previousUrl,
		returnUrl,
		returnHash,
		associatedUrl,
	} = localStorage;

	if (showBacklink) {
		localStorage.setItem('returnUrl', previousUrl);
		returnUrl = previousUrl;
		localStorage.setItem('returnHash', hash);
		returnHash = hash;
		localStorage.setItem('associatedUrl', currentUrl);
		associatedUrl = currentUrl;
	}

	if (returnUrl && currentUrl === associatedUrl) {
		const backlinkUrl = returnHash ? `${returnUrl}#${returnHash}` : returnUrl;
		backlinkComponent.setAttribute('data-url', backlinkUrl);
		body.classList.add('has-backlink');
	}

	console.log({
		previousUrl,
		returnUrl,
		associatedUrl,
		currentUrl
	})

	localStorage.setItem('previousUrl', currentUrl);
</script>
