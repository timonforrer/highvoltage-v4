---
import Button from './Button.astro';
import Icon from './Icon.astro';
import RichText from './RichText.astro';
import Picture from './Picture.astro';
import { removeMultiSlash } from '../lib/utils';

const {
  cta,
  date,
  description,
  image,
  lang,
  slug,
  title
} = Astro.props;

const formatter = new Intl.DateTimeFormat(lang, {
  year: 'numeric',
  month: 'long',
});

let backlink = null;

if (cta?.backlink) {
  backlink = encodeURIComponent(`${slug}#${cta.id}`);
}

---

<div class="milestone" id={cta && cta.id}>
  <Picture
    aspectMobile="16:9"
    aspectDesktop="21:9"
    class="milestone__image"
    {image}
  />

  <div class="milestone__content center center-v pin">
    <div class="supernarrow stack-s">
      <div>
        <time class="uppercase bold" datetime={date}>{formatter.format(new Date(date))}</time>
        <h3>{title}</h3>
      </div>
      <div class="stack-l">
        <RichText content={description} />
        {
          cta &&
          <Button
            href={removeMultiSlash(cta.slug) + (backlink ? `?backlink=${backlink}` : '')}
          >
            {cta.title}
            <Icon name="chevron" />
          </Button>
        }
      </div>
    </div>
  </div>
</div>

<style lang="scss" is:global>
  .boxes {
    display: flex;
    flex-wrap: wrap;
  }

  .box {
    padding: 1em 2em;
  }

  .milestone {
    overflow: hidden;
    position: relative;

    &__content {
      z-index: 1;

      & > div {
        padding-left: 2em;
      }
    }

    &__image img {
      width: 100%;
    }

    h3 {
      position: relative;
      &::before,
      &::after {
        content: "";
        background-color: currentColor;
        display: block;
        position: absolute;
        top: calc(0.6em - 0.125em);
      }
      
      &::before {
        border-radius: 50%;
        height: 0.75rem;
        left: -2rem;
        width: 0.75rem;
      }

      &::after {
        height: 9999px;
        left: calc(-2rem + 0.375rem - 1px);
        width: 2px;
      }
    }

    &:not(:first-child) {
      h3 {
        &::after {
          top: -777px;
        }
      }
    }
    &:last-child {
      h3 {
        &::before {
          bottom: 1.475rem;
          top: unset;
        }
        &::after {
          bottom: 1.475rem;
          top: unset;
        }
      }
    }

    &__image {
      position: relative;
      &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: linear-gradient(-90deg, hsla(0, 0%, 5%, 0), hsla(0, 0%, 5%, 0.72) 72.79%, #0e0e0e);
        display: block;
      }
    }
  }
  @media screen and (max-width: 760px) {
    .milestone {
      &__content {
        margin-block-start: calc(var(--space-xl) * -1);
        padding-block-end: var(--space-l);
      }
      &__image {
        &::after {
          background:
            linear-gradient(
              180deg,
              hsla(0, 0%, 5%, 0),
              hsla(0, 0%, 5%, 0.72) 72.79%,
              #0e0e0e);
          // background: linear-gradient(-90deg, hsla(0, 0%, 5%, 0), hsla(0, 0%, 5%, 0.72) 72.79%, #0e0e0e), rgba(0,0,0,0.5);
        }
      }
    }
  }
</style>
