---
import { getPicture } from '@astrojs/image/dist/index';
import { getWidthAndHeight, getUrl } from '../lib/sanity';

const {
  aspectDesktop,
  aspectMobile,
  class: className,
  image,
} = Astro.props;

const { url } = image.asset;
const { width, height } = image.asset.metadata.dimensions;
const { x: focalPointX, y: focalPointY } = image.hotspot || {};

const mobileSizes = getWidthAndHeight({
  aspect: aspectMobile,
  originalHeight: height,
  originalWidth: width,
  outputWidth: 1200
});

const desktopSizes = getWidthAndHeight({
  aspect: aspectDesktop,
  originalHeight: height,
  originalWidth: width,
  outputWidth: 2400
});

const mobileUrl = getUrl({
  focalPointX,
  focalPointY,
  width: mobileSizes.width,
  height: mobileSizes.height,
  baseUrl: url
});

const desktopUrl = getUrl({
  focalPointX,
  focalPointY,
  width: desktopSizes.width,
  height: desktopSizes.height,
  baseUrl: url
});

const mobileImage = await getPicture({
  src: mobileUrl,
  widths: [300, 600, 900, 1200],
  aspectRatio: aspectMobile,
  formats: ['avif', 'webp'],
  alt: ''
});

const desktopImage = await getPicture({
  src: desktopUrl,
  widths: [300, 600, 900, 1200],
  aspectRatio: aspectDesktop,
  formats: ['avif', 'webp'],
  alt: ''
});

---

<picture class={className}>
  {desktopImage.sources.map(source => (
    <source media="(min-width: 800px)" type={source.type} srcset={source.srcset} />
  ))}
  {mobileImage.sources.map(source => (
    <source type={source.type} srcset={source.srcset} />
  ))}
  <img {...mobileImage.image} />
</picture>
